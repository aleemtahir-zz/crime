package com.crime;


import java.util.ArrayList;
import org.apache.jena.query.Query;
import org.apache.jena.query.QueryExecution;
import org.apache.jena.query.QueryExecutionFactory;
import org.apache.jena.query.QueryFactory;
import org.apache.jena.query.QuerySolution;
import org.apache.jena.query.ResultSet;
import org.apache.jena.rdf.model.RDFNode;
import org.openrdf.repository.RepositoryConnection;
import org.openrdf.repository.http.HTTPRepository;


public class Connection {
	private RepositoryConnection connection;
	static ArrayList list = new ArrayList();
	static String defaultNameSpace = "http://www.semanticweb.org/hamza/ontologies/2016/11/untitled-ontology-55#";
	public static void main(String[] args) throws Exception {
		getConnectandLoad();
        
	}
	
	public Connection(RepositoryConnection connection) {
        this.connection = connection;
    }
	
	public static void getConnectandLoad() throws Exception{
		
		HTTPRepository repository = new HTTPRepository("http://localhost:7200/repositories/Crime");
        RepositoryConnection connection = repository.getConnection();
        connection.clear();
        Connection test = new Connection(connection);
        
        
       connection.close();
	}
	
/*	public void loadData() throws Exception {
		
        //System.out.println("# Loading ontology and data");
        connection.begin();
        connection.add(Connection.class.getResourceAsStream("/cric.rdf"),"urn:base", RDFFormat.RDFXML);
        //connection.add(FamilyRelationsApp.class.getResourceAsStream("/family-data.ttl"), "urn:base", RDFFormat.TURTLE);
        connection.commit();
        System.out.println("# Loading ontology and data");
    }
    
*/	
	public static ArrayList execSelectAndPrint(String queryString) {
		
		String endpoint = "http://localhost:7200/repositories/Crime";
		
		Query query = QueryFactory.create(queryString);
		QueryExecution q = QueryExecutionFactory.sparqlService(endpoint,
				query);
		ResultSet rs = q.execSelect();
		int i=0;
		while (rs.hasNext()) {
			QuerySolution soln = rs.nextSolution();
			RDFNode node = soln.get("x");
			String s = node.toString();
			s = s.replaceAll("..http(.*)", "");
			//i = Integer.parseInt(s); 
			//System.out.print(i);
			list.add(s.toString());
			return list;
	}
		//ResultSetFormatter.out(System.out, results);
		
		
		}*/
		
		/*while (rs.hasNext()) {
		    RowObject result = new RowObject();
		    QuerySolution binding = rs.nextSolution();
		    String x = binding.get("x").toString();
		    x = x.replaceAll("http://www.semanticweb.org/tayyab/ontologies/2016/7/untitled-ontology-2#", "");
		    String y = binding.get("y").toString();
		    y = y.replaceAll("http://www.semanticweb.org/tayyab/ontologies/2016/7/untitled-ontology-2#", "");
		    result.setSubject(binding.get("x"));
		    result.setObject(binding.get("y"));
		    // ...
		    results.add(result);
		}
		*/
		//return results;
		//return i;
	}
	
